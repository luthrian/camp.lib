/*******************************************************************************
 * Copyright (C) 2018 Christopher Campbell
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * Contributors:
 * 	Christopher Campbell - all code prior and post initial release
 ******************************************************************************/
package com.camsolute.code.camp.lib.contract.core;

public interface HasBusinessId {
	/**
	 * This delivers the initial business Id of a business object instance.
	 * The business Id is a unique identifier relevant to the business context of the order process. 
	 * The business Id may not be unique in a technical context such as the database table 
	 * used to persist the business object.
	 * 
	 * @return String value of the business Id + Util.DB._NS + initial technical Id (NEW_ID constant).
	 */
	public String initialBusinessId();

	/**
	 * This delivers the current business Id of a business object instance. 
	 * A business Id is a unique identifier relevant in a business context such as a business process. 
	 * The business Id may not be unique in a technical context such as the database table 
	 * used to persist the business object.
	 * The business Id consists of a externally provided business id plus a technical id which is generally
	 * generated by the system in which the business object is persisted (ex. Database)
	 * 
	 * @return String value of the current business Id + DUB._NS + current technical Id.
	 */
	public String businessId();
	
	public String updateBusinessId(String newId, boolean registerUpdate);

	/**
	 * This delivers the business Id without the technical Id part. 
	 * 
	 * @return String value of the current business Id + DUB._NS + current technical Id.
	 */
	public String onlyBusinessId();


}
